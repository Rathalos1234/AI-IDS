name: AI-IDS CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main, develop, develop-redundant]
  schedule:
    - cron: "0 9 * * *"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PYTHONUNBUFFERED: "1"
  PYTHONDONTWRITEBYTECODE: "1"

jobs:
  fast:
    name: Lint + Unit (PR gate)
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Upgrade pip
        run: python -m pip install --upgrade pip wheel
      - name: Install deps (runtime + test/linters)
        run: pip install -r requirements.txt pytest ruff mypy flask
      - name: Make scripts executable
        run: chmod +x scripts/test_fast.sh scripts/test_full.sh
      - name: (debug) list files
        run: ls -la && echo "--- tests dir ---" && ls -la tests
      - name: Run fast gate
        run: bash scripts/test_fast.sh
        env:
          LINT_STRICT: "1"

  full:
    name: Unit + Integration (+ perf)
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Upgrade pip
        run: python -m pip install --upgrade pip wheel
      - name: Install deps
        run: pip install -r requirements.txt pytest
      - name: Make scripts executable
        run: chmod +x scripts/test_full.sh
      - name: (debug) list files
        run: ls -la && echo "--- tests dir ---" && ls -la tests
      - name: Run full suite
        run: bash scripts/test_full.sh
      - name: Append perf snapshot to job summary
        if: always()
        run: |
          echo "### Perf snapshot (10k rows)" >> $GITHUB_STEP_SUMMARY
          if [ -f sprint_artifacts/pytest_perf.txt ]; then
            tail -n 50 sprint_artifacts/pytest_perf.txt >> $GITHUB_STEP_SUMMARY
          else
            echo "No perf output found (skipped or failed)" >> $GITHUB_STEP_SUMMARY
          fi
      - name: Upload sprint artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sprint_artifacts
          path: sprint_artifacts/**
          if-no-files-found: ignore
