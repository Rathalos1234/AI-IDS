name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  build-test:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.meta.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract version
        id: meta
        run: echo "version=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"

      - name: Set up Python 3.10 with pip cache
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: System deps (pcap)
        run: |
          sudo apt-get update
          sudo apt-get install -y libpcap-dev

      - name: Install deps
        run: |
          python -m pip install --upgrade pip wheel
          pip install -r requirements.txt
          pip install flake8 mypy bandit pytest pytest-cov build

      - name: Lint / Types / Security
        run: |
          flake8 .
          mypy --ignore-missing-imports --pretty anomaly_detector.py packet_processor.py network_monitor.py main.py
          bandit -q -r .

      - name: Tests + Coverage (fail <80% for releases)
        run: |
          pytest -q --maxfail=1 --disable-warnings \
            --cov=. --cov-report=xml --cov-report=html --cov-fail-under=80

      - name: Build distribution
        run: python -m build

      - name: Upload artifacts (coverage + dist)
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            dist/
            coverage.xml
            htmlcov/

  gh-release:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-artifacts
          path: release_artifacts

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release_artifacts/dist/*
            release_artifacts/coverage.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-image:
    needs: build-test
    runs-on: ubuntu-latest
    if: ${{ hashFiles('Dockerfile') != '' }}
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
      VERSION: ${{ needs.build-test.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push (latest + version)
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          build-args: |
            PY_VER=3.10

  deploy-prod-ssh:
    # OPTIONAL systemd deploy over SSH (runs only if all secrets are present)
    needs: [gh-release]
    runs-on: ubuntu-latest
    if: ${{ secrets.DEPLOY_HOST && secrets.DEPLOY_USER && secrets.SSH_PRIVATE_KEY }}
    steps:
      - name: Restart service on remote host
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo systemctl daemon-reload
            sudo systemctl restart aiids.service
            sudo systemctl status aiids.service --no-pager -l || true
